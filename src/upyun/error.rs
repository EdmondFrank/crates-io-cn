use derive_more::{Display, Error, From};
use phf::phf_map;

pub type Result<T> = std::result::Result<T, Error>;

#[derive(Error, From)]
pub struct UpyunError {
    code: u64,
}

#[derive(Debug, Display, Error, From)]
pub enum Error {
    Reqwest(reqwest::Error),
    SerdeJSON(serde_json::Error),
    Upyun(UpyunError),
}

impl std::fmt::Debug for UpyunError {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
        write!(
            f,
            "UpyunError {{ code: {}, msg: {} }}",
            self.code,
            UPYUN_CODE.get(&self.code).unwrap_or(&"unknown")
        )
    }
}

impl std::fmt::Display for UpyunError {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
        write!(
            f,
            "UpyunError<{}>: {}",
            self.code,
            UPYUN_CODE.get(&self.code).unwrap_or(&"unknown")
        )
    }
}

static UPYUN_CODE: phf::Map<u64, &'static str> = phf_map! {
    0u64 => "unknown",
    40001000u64 => "wrong uri",
    40001001u64 => "wrong content-md5",
    40001003u64 => "meta invalid",
    40001004u64 => "folder args invalid",
    40001005u64 => "iter args invalid",
    40001006u64 => "type invalid",
    40001007u64 => "block invalid",
    40001008u64 => "list type not support",
    40001009u64 => "invalid update time",
    40001011u64 => "invalid append position",
    40001021u64 => "invalid utf8 key",
    40001041u64 => "request wrong type",
    40001042u64 => "request wrong timestamp",
    40001043u64 => "request wrong column",
    40001044u64 => "request wrong list",
    40001045u64 => "not found",
    40001046u64 => "wrong length",
    40001047u64 => "wrong check column",
    40001051u64 => "encode data error",
    40001052u64 => "decode data error",
    40001055u64 => "record has been changed",
    40001161u64 => "wrong range",
    40001022u64 => "wrong multipart action",
    40001023u64 => "wrong multipart uuid",
    40001024u64 => "wrong multipart type",
    40001025u64 => "wrong multipart length",
    40001027u64 => "wrong multipart size",
    40001030u64 => "wrong multipart part id",
    40001031u64 => "duplicate multipart part",
    40001032u64 => "oversize multipart part",
    40001033u64 => "overflow multipart part",
    40001034u64 => "unexpect multipart length",
    40001035u64 => "notfound multipart uuid",
    40001036u64 => "completed multipart",
    40001037u64 => "incomplete multipart parts",
    40001038u64 => "invalid append file",
    40000000u64 => "storage bad request",
    40000001u64 => "need save-key",
    40000002u64 => "need body",
    40000003u64 => "need bucket name",
    40000004u64 => "need expiration",
    40000005u64 => "need file",
    40000006u64 => "content md5 not match",
    40000007u64 => "need policy",
    40000008u64 => "need signature",
    40000009u64 => "decode policy error",
    40000010u64 => "data too long for ext-param",
    40000011u64 => "chunked request bodies not supported yet",
    40000012u64 => "write file to fs error",
    40000013u64 => "need content-md5 but no body provided",
    40000014u64 => "need content-md5 but no content provided",
    40000015u64 => "missing required arguments",
    40000016u64 => "missing file_hash argument",
    40000017u64 => "missing file_blocks argument",
    40000018u64 => "too many file blocks",
    40000019u64 => "missing file_size argument",
    40000020u64 => "missing save_token argument",
    40000021u64 => "missing block_index argument",
    40000022u64 => "missing block_hash argument",
    40000023u64 => "block already exists",
    40000024u64 => "block not finished",
    40000025u64 => "file size not match",
    40000026u64 => "block index out of range",
    40000027u64 => "block size too small, at least 100KB",
    40000028u64 => "block size too large, at most 5MB",
    40000030u64 => "path encoding should be utf8",
    40000031u64 => "filename should be utf8",
    40000032u64 => "ffmpeg args error",
    40000033u64 => "failed to read firstchunk",
    40000034u64 => "client error",
    40000035u64 => "need purge body",
    40000036u64 => "uri bucket must be same as param bucket",
    40000037u64 => "unknown service",
    40000038u64 => "no boundary defined in Content-Type",
    40000039u64 => "Content-Length is equal to 0",
    40000040u64 => "source bucket not equal target bucket",
    40000041u64 => "source key equals to target key",
    40000042u64 => "source key wrong",
    40000044u64 => "need metadata",
    40010001u64 => "not enough arguments",
    40010002u64 => "url not allowed",
    40010003u64 => "tasks number error",
    40010029u64 => "only 1~10 tasks supported in get",
    40010033u64 => "decode tasks error",
    40011091u64 => "invalid app name",
    40011092u64 => "invalid file ttl",
    40100001u64 => "need date header",
    40100002u64 => "date offset error",
    40100003u64 => "unknown realm in authorization header",
    40100004u64 => "need authorization header",
    40100005u64 => "signature error",
    40100006u64 => "user not exists",
    40100007u64 => "user blocked",
    40100008u64 => "user blocked in this bucket",
    40100009u64 => "user password error",
    40100010u64 => "account not exist",
    40100011u64 => "account blocked",
    40100012u64 => "bucket not exist",
    40100013u64 => "bucket blocked",
    40100014u64 => "bucket removed",
    40100015u64 => "bucket read only",
    40100016u64 => "invalid date value in header",
    40100017u64 => "user need permission",
    40100018u64 => "account inactivate",
    40100019u64 => "account forbidden",
    40100020u64 => "account reject",
    40100021u64 => "overdue account",
    40100022u64 => "uri prefix error",
    40100023u64 => "uri postfix error",
    40100024u64 => "expire error",
    40100025u64 => "auth error",
    40300001u64 => "file name contains invalid chars (\r\n\t)",
    40300002u64 => "file path too long",
    40300003u64 => "file name too long",
    40300004u64 => "bucket is full",
    40300005u64 => "directory not empty",
    40300006u64 => "authorization has expired",
    40300007u64 => "content md5 not match",
    40300008u64 => "file too small",
    40300009u64 => "file too large",
    40300010u64 => "file type error",
    40300011u64 => "has no permission to delete",
    40300012u64 => "need content-type",
    40300013u64 => "form api disabled",
    40300014u64 => "order must be asc or desc",
    40300015u64 => "path is not a file, maybe a directory",
    40300016u64 => "content-secret only accept [a-zA-Z0-9]",
    40300017u64 => "no thumb setting found for bucket",
    40300018u64 => "not an image",
    40300019u64 => "image width too small or too big",
    40300020u64 => "image height too small or too big",
    40300021u64 => "image limit exceeded",
    40300022u64 => "invalid image-width-range",
    40300024u64 => "exceed max size",
    40300025u64 => "wrong content-type header",
    40300026u64 => "need content-length header",
    40300027u64 => "request body too big",
    40300028u64 => "request has expired",
    40300035u64 => "content-length of policy format error",
    40400001u64 => "file or directory not found",
    40400002u64 => "base64 decoded err",
    40401004u64 => "Not found, mark as deleted",
    40401005u64 => "Not found, block deleted",
    40401006u64 => "type invalid",
    40600001u64 => "dir not acceptable",
    40600002u64 => "folder already exists",
    40600003u64 => "single-copy bucket not support form api",
    40800001u64 => "read client request timeout",
    41200001u64 => "precondition failed",
    41300001u64 => "content length too large",
    41500001u64 => "media type error, need content-type",
    42900001u64 => "too many requests",
    42900002u64 => "too many requests of the same uri",
    42900004u64 => "request banned",
    42900005u64 => "bandwidth limit",
    42900006u64 => "too many auth check",
    42900007u64 => "concurrent put or delete",
    42900008u64 => "too many meta requests",
    50300000u64 => "unknown error",
    50300002u64 => "decode error",
    50300007u64 => "capture file from fs error",
    50300009u64 => "get body temp file error",
    50300010u64 => "read body temp file error",
    50300011u64 => "capture file from ffmpeg error",
    50300012u64 => "service error in thumb",
    50300013u64 => "put file capture timeout",
    50300014u64 => "get client socket error",
    50300015u64 => "decode image info error",
    50300016u64 => "get image info error",
    50300017u64 => "failed to new md5",
    50300018u64 => "failed to new form",
    50300020u64 => "put file capture error",
    50300022u64 => "new resource error",
    50300023u64 => "connect to db error",
    50300024u64 => "get master failed",
    50300025u64 => "write info error",
    50300026u64 => "get data error",
    50300027u64 => "put file to fs error",
    50300028u64 => "get file from fs error",
    50300029u64 => "unknow error",
    50300030u64 => "upstream closed connection",
    50300031u64 => "read upstream timeout",
    50300032u64 => "wrong data",
    50300033u64 => "new resource error",
    50300034u64 => "get info errors",
    50300036u64 => "send to kafka error",
    50300038u64 => "failed to new httpipe",
    50300039u64 => "failed to get client body reader",
    50300040u64 => "wrong config",
    50300041u64 => "connect to db error",
    50300042u64 => "delete path error",
    50300043u64 => "put task to nsq error",
    50300044u64 => "avalon list dir error",
    59900001u64 => "sync call timeout",
    59900002u64 => "sync call closed by target",
    59900003u64 => "sync call failed",
    59900004u64 => "purge timeout",
    59900005u64 => "purge closed by target",
    59900006u64 => "purge call failed",
    59900007u64 => "async delete fail",
    44400003u64 => "client abort",
    44400004u64 => "put capture broken pipe",
    44400005u64 => "connection reset by client",
    40010030u64 => "invalid x-av-b header",
    40010031u64 => "invalid x-av-ac header",
    40010032u64 => "invalid x-av-f header",
    40011001u64 => "invalid x-gmkerl-type",
    40011002u64 => "invalid x-gmkerl-value",
    40011003u64 => "invalid x-gmkerl-unsharp",
    40011004u64 => "invalid x-gmkerl-quality",
    40011005u64 => "invalid x-gmkerl-exif-switch",
    40011006u64 => "invalid x-gmkerl-gifto",
    40011007u64 => "invalid x-gmkerl-webp",
    40011008u64 => "invalid x-gmkerl-format",
    40011009u64 => "invalid x-gmkerl-crop",
    40011010u64 => "invalid x-gmkerl-rotate",
    40011011u64 => "invalid x-gmkerl-gaussblur",
    40011012u64 => "invalid x-gmkerl-compress",
    40011013u64 => "invalid x-gmkerl-progressive",
    40011014u64 => "invalid x-gmkerl-noicc",
    40011015u64 => "invalid x-gmkerl-watermark-switch",
    40011016u64 => "invalid x-gmkerl-watermark-align",
    40011017u64 => "invalid x-gmkerl-watermark-margin",
    40011018u64 => "invalid x-gmkerl-watermark-opacity",
    40011019u64 => "invalid x-gmkerl-watermark-animate",
    40011020u64 => "invalid x-gmkerl-watermark-font",
    40011021u64 => "invalid x-gmkerl-watermark-text",
    40011022u64 => "invalid x-gmkerl-watermark-color",
    40011023u64 => "invalid x-gmkerl-watermark-border",
    40011024u64 => "invalid x-gmkerl-watermark-size",
    40011025u64 => "invalid x-gmkerl-gradient-orientation",
    40011026u64 => "invalid x-gmkerl-gradient-pos",
    40011027u64 => "invalid x-gmkerl-gradient-startcolor",
    40011028u64 => "invalid x-gmkerl-gradient-stopcolor",
    40011029u64 => "invalid x-gmkerl-extract-func",
    40011030u64 => "invalid x-gmkerl-extract-color-count",
    40011031u64 => "invalid x-gmkerl-extract-offset",
    40011032u64 => "invalid x-gmkerl-extract-palette",
    40011033u64 => "invalid x-gmkerl-canvas",
    40011034u64 => "invalid x-gmkerl-canvas-color",
    40011035u64 => "invalid param in thumb",
    40011050u64 => "invalid app name",
    40011051u64 => "invalid x-upyun-part-id",
    40011052u64 => "invalid x-upyun-multi-length",
    40011053u64 => "invalid x-upyun-multi-type",
    40011054u64 => "invalid x-upyun-part-size",
    40011055u64 => "invalid multipart stage",
    40011056u64 => "invalid x-upyun-multi-uuid",
    40011057u64 => "invalid UTF8 Key",
    40011058u64 => "x-upyun-multi-uuid not found",
    40011059u64 => "file already upload",
    40011060u64 => "file md5 not match",
    40011061u64 => "part id error",
    40011062u64 => "part already complete"
};
